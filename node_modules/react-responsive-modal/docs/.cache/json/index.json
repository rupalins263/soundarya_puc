{"data":{"site":{"siteMetadata":{"title":"react-responsive-modal","description":"Simple responsive modal for react"}},"markdownRemark":{"id":"/Users/leo/dev/github/pradel/react-responsive-modal/docs/../README.md absPath of file >>> MarkdownRemark","html":"<h1>react-responsive-modal</h1>\n<p><a href=\"https://badge.fury.io/js/react-responsive-modal\"><img src=\"https://badge.fury.io/js/react-responsive-modal.svg\" alt=\"npm version\"></a>\n<a href=\"https://www.npmjs.com/package/react-responsive-modal\"><img src=\"https://img.shields.io/npm/dm/react-responsive-modal.svg\" alt=\"npm\"></a>\n<a href=\"https://travis-ci.org/pradel/react-responsive-modal\"><img src=\"https://travis-ci.org/pradel/react-responsive-modal.svg?branch=master\" alt=\"Build Status\"></a>\n<a href=\"https://codecov.io/gh/pradel/react-responsive-modal\"><img src=\"https://codecov.io/gh/pradel/react-responsive-modal/branch/master/graph/badge.svg\" alt=\"codecov\"></a>\n<a href=\"https://david-dm.org/pradel/react-responsive-modal\"><img src=\"https://david-dm.org/pradel/react-responsive-modal/status.svg\" alt=\"dependencies Status\"></a></p>\n<p>A simple responsive react modal compatible with React 15, 16 and ready for React 17.</p>\n<ul>\n<li>Centered modals.</li>\n<li>Scrolling modals.</li>\n<li>Multiple modals.</li>\n<li>Easily customizable via props.</li>\n</ul>\n<h2>Demo</h2>\n<p>You can find a demo <a href=\"https://react-responsive-modal.leopradel.com/\">here</a>.</p>\n<h2>Examples</h2>\n<p><a href=\"https://react-responsive-modal.leopradel.com/#example\">https://react-responsive-modal.leopradel.com/#example</a></p>\n<h2>Installation</h2>\n<p>With npm: <code class=\"language-text\">npm install react-responsive-modal --save</code></p>\n<p>Or with yarn: <code class=\"language-text\">yarn add react-responsive-modal</code></p>\n<h2>Usage</h2>\n<p><a href=\"https://codesandbox.io/s/9jxp669j2o\"><img src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Edit react-responsive-modal\"></a></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Modal <span class=\"token keyword\">from</span> <span class=\"token string\">'react-responsive-modal'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    open<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function-variable function\">onOpenModal</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> open<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function-variable function\">onCloseModal</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> open<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> open <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onOpenModal<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Open modal<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Modal open<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>open<span class=\"token punctuation\">}</span> onClose<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onCloseModal<span class=\"token punctuation\">}</span> center<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Simple centered modal<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Modal<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h2>Props</h2>\n<!-- --begin-insert-props-- -->\n<h3>Modal</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>closeOnEsc</td>\n<td><code class=\"language-text\">bool</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>Is the modal closable when user press esc key.</td>\n</tr>\n<tr>\n<td>closeOnOverlayClick</td>\n<td><code class=\"language-text\">bool</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>Is the modal closable when user click on overlay.</td>\n</tr>\n<tr>\n<td>onEntered</td>\n<td><code class=\"language-text\">func</code></td>\n<td><code class=\"language-text\">null</code></td>\n<td>Callback fired when the Modal is open and the animation is finished.</td>\n</tr>\n<tr>\n<td>onExited</td>\n<td><code class=\"language-text\">func</code></td>\n<td><code class=\"language-text\">null</code></td>\n<td>Callback fired when the Modal has exited and the animation is finished.</td>\n</tr>\n<tr>\n<td><strong>onClose*</strong></td>\n<td><code class=\"language-text\">func</code></td>\n<td></td>\n<td>Callback fired when the Modal is requested to be closed by a click on the overlay or when user press esc key.</td>\n</tr>\n<tr>\n<td>onEscKeyDown</td>\n<td><code class=\"language-text\">func</code></td>\n<td><code class=\"language-text\">null</code></td>\n<td>Callback fired when the escape key is pressed.</td>\n</tr>\n<tr>\n<td>onOverlayClick</td>\n<td><code class=\"language-text\">func</code></td>\n<td><code class=\"language-text\">null</code></td>\n<td>Callback fired when the overlay is clicked.</td>\n</tr>\n<tr>\n<td><strong>open*</strong></td>\n<td><code class=\"language-text\">bool</code></td>\n<td></td>\n<td>Control if the modal is open or not.</td>\n</tr>\n<tr>\n<td>classNames</td>\n<td><code class=\"language-text\">object</code></td>\n<td></td>\n<td>An object containing classNames to style the modal, can have properties 'overlay' (classname for overlay div), 'modal' (classname for modal content div), 'closeButton' (classname for the button that contain the close icon), 'closeIcon' (classname for close icon svg). You can customize the transition with 'transitionEnter', 'transitionEnterActive', 'transitionExit', 'transitionExitActive'</td>\n</tr>\n<tr>\n<td>styles</td>\n<td><code class=\"language-text\">object</code></td>\n<td></td>\n<td>An object containing the styles objects to style the modal, can have properties 'overlay', 'modal', 'closeButton', 'closeIcon'.</td>\n</tr>\n<tr>\n<td>children</td>\n<td><code class=\"language-text\">node</code></td>\n<td><code class=\"language-text\">null</code></td>\n<td>The content of the modal.</td>\n</tr>\n<tr>\n<td>center</td>\n<td><code class=\"language-text\">bool</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Is the dialog centered (\n<strong>when you don't have a lot of content</strong>\n).</td>\n</tr>\n<tr>\n<td>showCloseIcon</td>\n<td><code class=\"language-text\">bool</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>Show the close icon.</td>\n</tr>\n<tr>\n<td>closeIconSize</td>\n<td><code class=\"language-text\">number</code></td>\n<td><code class=\"language-text\">28</code></td>\n<td>Close icon size.</td>\n</tr>\n<tr>\n<td>closeIconSvgPath</td>\n<td><code class=\"language-text\">node</code></td>\n<td><code class=\"language-text\">&lt;path d=&quot;M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z&quot; /&gt;</code></td>\n<td>A valid svg path to show as icon.</td>\n</tr>\n<tr>\n<td>animationDuration</td>\n<td><code class=\"language-text\">number</code></td>\n<td><code class=\"language-text\">500</code></td>\n<td>Animation duration in milliseconds.</td>\n</tr>\n</tbody>\n</table>\n<!-- --end-insert-props-- -->\n<h2>License</h2>\n<p>MIT © <a href=\"https://www.leopradel.com/\">Léo Pradel</a></p>"}},"pathContext":{}}